---
- name: download vagrant .deb package
  get_url:
    url: "{{ vagrant_url }}"
    dest: "{{ ansible_env.HOME }}/setup/vagrant.deb"
    mode: 0755

- name: get currently installed vagrant version
  command: "vagrant --version"
  sudo: yes
  register: result
  ignore_errors: True

- name: install vagrant
  apt:
    deb: "{{ ansible_env.HOME }}/setup/vagrant.deb"
  sudo: yes
  when: result.rc !=0 or result.stderr.find('A later version is already installed') != -1

- name: download virtualbox .deb package
  get_url:
    url: "{{ virtualbox_url }}"
    dest: "{{ ansible_env.HOME }}/setup/virtualbox.deb"
    mode: 0755

- name: install virtualbox
  apt:
    deb: "{{ ansible_env.HOME }}/setup/virtualbox.deb"
  sudo: yes

- name: install wave dependencies
  apt:
    name: "{{ item }}"
    state: installed
    update_cache: yes
  with_items:
    - python-pip
    - curl
    - nodejs
    - nfs-kernel-server
    - nfs-common
    - rpcbind
    - tmux
    - npm
    - libjpeg-dev
    - libfreetype6-dev
    - zlib1g-dev
    - libpng12-dev
    - python-dev
    - libpq-dev
    - python-dev
  sudo: yes

- name: get currently installed node version
  command: "node --version"
  sudo: yes
  register: result
  ignore_errors: True
  tags: nodejs

- name: checkout node
  git:
    repo: "git://github.com/ry/node.git"
    dest: "/setup/node"
    force: no
    accept_hostkey: yes
  when: result.rc !=0
  tags: nodejs
  sudo: yes

- name: configure
  sudo: yes
  command: "./configure"
  args:
    chdir: /setup/node
  when: result.rc !=0
  tags: nodejs

- name: make
  command: "make"
  sudo: yes
  args:
    chdir: /setup/node
  when: result.rc !=0
  tags: nodejs

- name: make install
  command: "make install"
  sudo: yes
  args:
    chdir: /setup/node
  when: result.rc !=0
  tags: nodejs

- name: install global nodejs packages
  npm:
    name: "{{ item.name }}"
    state: present
    global: yes
    version: "{{ item.version|default('') }}"
  with_items:
    - {name: 'bower'}
    - {name: 'coffee-script', version: '1.7.1'}
    - {name: 'grunt-cli'}
    - {name: 'less'}
    - {name: 'jshint'}
    - {name: 'coffee-jshint'}
  sudo: yes

- name: install tmuxp
  pip:
    name: tmuxp
  sudo: yes

- name: copy tmuxp config
  copy:
    src: .tmux.conf
    dest: "{{ ansible_env.HOME }}/.tmux.conf"
    mode: 0755

- name: install ipython
  pip:
    name: ipython
  sudo: yes
